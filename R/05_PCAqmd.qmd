---
title: "05 PCA"
subtitle: "R for Bio Data Science"
format: html
author: All
date: "2023-11-15"
editor: visual
---

## Load libraries

```{r}
library("tidyverse")
library("here")
library("readxl")
library("tidyclust")
library("tidymodels")
library("corrr")

library("caret")

source(here("R/99_proj_func.R"))

```

## Load data

```{r}
# Load data
data <- read_tsv(here("data/04_dat_augment.tsv"))
```

## Feature selection

A reduciton of features is needed to do a PCA, and reduce overfitting. It will be done looking at corelations between the genes and filtering genes which highly corelations while keeping one to represent those features.

Others ways could be inspetion of heatmap of correlation, Recursive feture elimintaion and more. Due to time contrains these will not be investigtated during this projekt.

```{r}
# Look at only gene data

features_to_select <- data |>
  select(-c(1:31))

features_to_select_none_na <- features_to_select |> 
  select_if(
    ~ !any(is.na(.))
    ) 

features_to_select_fully_clear <- features_to_select|>
  select_if(
    is.numeric
    )

# Set diagoanl to 1 so findCorrelations can work

feature_cor <- features_to_select |>
  correlate(diagonal = 1)


feature_cor |>
  select(-c(1)) |>
  findCorrelation(
    cutoff = 0.9
  )

feature_cor_none <- feature_cor |>
    select_if(
    is.numeric
    )


feature_cor |>
  select(-c(1))

cor_index <- findCorrelation(feature_cor_none,cutoff = 0.9,)


# feature_cor_2 <- feature_cor|>
#   mutate_all(
#     funs(
#       replace_na(., 1)
#       )
#     )

# 
# feature_cor2 <- features_to_select |>
#   cor()
# 
# findCorrelation(feature_cor2,cutoff = 0.9)
# 
# feature_cor2

```

## PCA

### Doing PCA 

Now we look

```{r}
input_pca <- data |>
  select(-c(1:31))


pca_fit <- log2(input_pca + 1) |>
  prcomp()



```

### Preploting

```{r}
pca_plot_axes_labels <- pca_fit |>
  tidy("eigenvalues") |>
  mutate(
    lbl = str_c("PC", PC, ", Variance = ", 
                 round(percent*100,2),
                 "%")
    ) |> 
  pull("lbl")
```

### Ploting hc clusters

```{r}

# PCA for hc clusts
plot_pca_hc <- pca_fit |>
  augment(data) |> 
  filter(!is.na(survival)) |>
  ggplot(
    aes(
      x = .fittedPC1,
      y = .fittedPC2, 
      #shape = factor(hc_cluster)
      #label = hc_cluster,
      )) + 
  geom_point(aes(
    #shape = hc_cluster,
      #shape = factor(hc_cluster),
      color = survival),
    size = 3,) +
    #size = 3,
    #shape = hc_cluster) +
    #shape = 21) +
  theme_half_open(12) +
  background_grid()+
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(
    title = "PCA: Paitiens clusters by Trancriptpics",
    x = pluck(pca_plot_axes_labels, 1),
    y = pluck(pca_plot_axes_labels, 2),
    shape = "Pantient HC",
    fill = "Survival Category",
    caption = "Data from doi.org/10.1038/s42003-021-01842-7")+
  theme(plot.caption.position = "plot")
 

plot_pca_hc



```

```{r}
plot_pca_sur <- pca_fit |>
  augment(data) |> 
  ggplot(aes(.fittedPC1, .fittedPC2, color = survival)) + 
  geom_point(size = 1.5) +
  theme_half_open(12) +
  background_grid() +
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) 

plot_pca_sur

```

### Eigenvalue

```{r}
pca_fit |>
  tidy("pcs") |> 
  slice_head(n = 10) |>
  mutate(percent = round(percent * 100,digits = 2)) |> 
  ggplot(aes(x = PC,
             y = percent)) +
  geom_col(colour = "black",
           fill = "#000099",
           alpha = 0.5) +
  geom_text(aes(label = percent), 
    vjust = 1.2,
    colour = "#eea47f",
    size = 5,
    fontface = "bold") +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks=c(1:10)) +
  theme_bw(base_size = 20)  +
  labs(title = "Eigenvalues for variance explaination",
       caption = "Data from doi.org/10.1038/s42003-021-01842-7",) +
  theme(panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        plot.caption = element_text(size = 10))


```

```{r}
pca_fit |>
  tidy("pcs") |> 
  mutate(percent = percent * 100) |> 
  ggplot(aes(x = PC,
             y = percent)) +
  geom_hline(yintercept = 0) +
  geom_col(colour = "black",
           alpha = 0.5) +
  theme_bw(base_size = 20) +
  theme(panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank()) +
  labs(title = "Scree Plot of PCA of BLOSUM62")


bl62_pca_aug <- bl62_pca |>
  augment(bl62)
bl62_pca_aug


pca_plot_axes_labels <- bl62_pca |>
  tidy("eigenvalues") |>
  mutate(lbl = str_c("PC", PC, ", VE = ", round(percent*100,2), "%")) |> 
  pull("lbl")
pca_plot_axes_labels

pca_plot_axes_labels <- bl62_pca |>
  tidy("eigenvalues") |>
  mutate(lbl = str_c("PC", PC, ", VE = ", round(percent*100,2), "%")) |> 
  pull("lbl")
pca_plot_axes_labels


pca_plot <- bl62_pca_aug |> 
  ggplot(aes(x = .fittedPC1,
             y = .fittedPC2,
             label = aa,
             colour = chem_class,
             fill = chem_class)) +
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  geom_point(shape = 21,
             size = 6,
             alpha = 0.5) +
  geom_text(colour = "black") +
  scale_fill_manual(
    values = c("red", "blue", "black",
               "purple", "green", "yellow")) +
  scale_colour_manual(
    values = c("red", "blue", "black",
               "purple", "green", "yellow")) +
  coord_fixed() +
  theme_bw(base_size = 20,
           base_family = "avenir") +
  labs(
    title = "PCA: Scores Plot of BLOSUM62",
    x = pluck(pca_plot_axes_labels, 1),
    y = pluck(pca_plot_axes_labels, 2),
    fill = "Chemistry",
    colour = "Chemistry",
    caption = "Up: Aromatic, down: Aliphatic, Left: Charged, Right: Hydrophobic")
```
