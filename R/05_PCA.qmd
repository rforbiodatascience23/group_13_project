---
title: "05 PCA"
subtitle: "R for Bio Data Science"
format: html
author: All
date: "2023-11-15"
editor: visual
---

## Load libraries

```{r}
library("tidyverse")
library("broom")
library("here")
library("readxl")
library("cowplot")
source(here("R/99_proj_func.R"))

```

## Load data

```{r}
# Load data
data <- read_tsv(here("data/03_dat_selected_transcript_augment.tsv"))
```

## PCA

Exploration of the trancrips data in PCA space

### Computing PCA

```{r}
# Subset data to expression data
input_pca <- data |>
  select(-c(1:33))

# Run pca 
pca_fit <- log2(input_pca + 1) |>
  prcomp()
```

### Pre-ploting

Creating labels for PC and variances explanation

```{r}
# Crate labels for axis 
pca_plot_axes_labels <- pca_fit |>
  tidy("eigenvalues") |>
  mutate(
    lbl = str_c("PC", PC, ", Variance = ", 
                 round(percent*100,2),
                 "%")) |> 
  pull("lbl")
```

### Meta data in PCA

Explore meta data

```{r}
# Funciton to plot in PCA space
pca_meta_data <- function(to_plot) {
plot_pca_ethnicity <- pca_fit |>
  augment(data)  |>
  ggplot(
    aes(
      x = .fittedPC1,
      y = .fittedPC2, 
      )) + 
  geom_point(aes_string(
      color =   to_plot  ),
    size = 3,) +
  theme_half_open(12) +
  background_grid()+
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(
    title = "PCA: Paitiens clusters by Trancriptpics",
    x = pluck(pca_plot_axes_labels, 1),
    y = pluck(pca_plot_axes_labels, 2),
    shape = "Pantient HC",
    fill = "Survival Category",
    caption = "Data from doi.org/10.1038/s42003-021-01842-7")+
  theme(plot.caption.position = "plot")
 plot_pca_ethnicity
}



 
 
```

#### plot all

None of the meta data seems to explain the subgroups.

```{r}

for (x in colnames(data[2:33])) {
  print(pca_meta_data(x))
}
```

#### One prettie one to show

```{r}


plot_pca_hc <- pca_fit |>
  augment(data) |> 
  filter(!is.na(survival_time)) |>
  ggplot(
    aes(
      x = .fittedPC1,
      y = .fittedPC2, )) + 
  geom_point(
    aes_string(
      color =   "survival_time"),
    size = 3) +
  theme_half_open(12) +
  background_grid()+
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(
    title = "PCA: Paitiens clusters by Trancriptpics",
    x = pluck(pca_plot_axes_labels, 1),
    y = pluck(pca_plot_axes_labels, 2),
    shape = "Pantient HC",
    color = "Survival Catagorie",
    caption = "Data from doi.org/10.1038/s42003-021-01842-7")+
  theme(plot.caption.position = "plot")
plot_pca_hc


```

### Eigenvalue

```{r}
pca_fit |>
  tidy("pcs") |> 
  slice_head(n = 10) |>
  mutate(percent = round(percent * 100,digits = 2)) |> 
  ggplot(aes(x = PC,
             y = percent)) +
  geom_col(colour = "black",
           fill = "#000099",
           alpha = 0.5) +
  geom_text(aes(label = percent), 
    vjust = 1.2,
    colour = "black",
    size = 5,
    fontface = "bold") +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks=c(1:10)) +
  theme_bw(base_size = 20)  +
  labs(title = "Eigenvalues for variance explaination",
       caption = "Data from doi.org/10.1038/s42003-021-01842-7",) +
  theme(panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        plot.caption = element_text(size = 10))


```

### Feature in PCA space

```{r}
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

library("ggrepel")

# plot rotation matrix
pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  arrange(desc(PC1))|>
  slice(1:5)|>
  mutate(
    column = str_remove_all(column, "_NM_.*")  
  ) |>
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text_repel(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-0.1, .1) + ylim(-.1, .1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)
```

### Plots of clusters in PCA

```{r}

plot_pca_hc <- pca_fit |>
  augment(data) |>
  ggplot(
    aes(
      x = .fittedPC1,
      y = .fittedPC2,
      colour = sample_cluster)) + 
  geom_point(
    size = 3
    ) +
  theme_half_open(12) +
  background_grid()+
  geom_vline(
    xintercept = 0
    ) +
  geom_hline(
    yintercept = 0
    ) +
  labs(
    title = "PCA of Trancriptpics expresion",
    subtitle = "Cluster of patiens based on selected trancripts",
    x = pluck(pca_plot_axes_labels, 1),
    y = pluck(pca_plot_axes_labels, 2),
    shape = "Pantient HC",
    color = "Samle by HC clustering",
    caption = "Data from doi.org/10.1038/s42003-021-01842-7"
    ) +
  theme(
    plot.caption.position = "plot",
    ) +
  scale_colour_discrete(
    labels = c("Cluster 1", "Cluster 2", "Cluster 3","Cluster 4")
  ) 
plot_pca_hc
```

### Explore the clusters

#### Cluster with point plot

```{r}

trancrip_to_plot <- pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  arrange(desc(PC2))|>
  select(column)|>
  slice(1:5)|>
  pull()

mean_data_pca2 <- data |>
  group_by(sample_cluster)|>
  summarise(mean_GNG8_NM_033258 = mean(GNG8_NM_033258),
            mean_NHLH1_NM_005598 = mean(NHLH1_NM_005598),
            mean_PALM_NM_001040134 = mean(PALM_NM_001040134),
            mean_KCNQ2_NM_172109 = mean(KCNQ2_NM_172109),
            mean_NPTX2_NM_002523 = mean(NPTX2_NM_002523))|>
    pivot_longer(
    cols = -sample_cluster,
    names_to = "trancrips",
    values_to = "expression"
  )

ggplot(
  mean_data_pca2, 
       aes(
         sample_cluster,
         expression,
         group = trancrips)) +
  geom_point(
    aes(
      color = trancrips ))+
  geom_line(
    aes(
      color = trancrips
    ))

```

#### DET cluster PC1 

```{r}

trancrip_to_plot <- pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  arrange(desc(PC1))|>
  select(column)|>
  slice(1:5)|>
  pull()

mean_data_pca1 <- data |>
  group_by(sample_cluster)|>
  select(trancrip_to_plot)|>
    pivot_longer(
    cols = -sample_cluster,
    names_to = "trancrips",
    values_to = "expression"
  )


ggplot(
  mean_data_pca1, 
       aes(
         sample_cluster,
         expression,
         fill = trancrips,
         dodge = trancrips)) +
  stat_boxplot(
    geom ='errorbar') +
  geom_boxplot() +
    scale_x_discrete(
        labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4")
        ) +
  labs(
    title = "Trancript express acroos Clusters",
    x = "Pantien cluters by HC",
    y = "Trancript Expression",
    color = "Trancrips",
    caption = "Data from doi.org/10.1038/s42003-021-01842-7"
    ) +
  theme(
    plot.caption.position = "plot",
    )

```

#### DET cluster PC2

```{r}
trancrip_to_plot2 <- pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  arrange(desc(PC2))|>
  select(column)|>
  slice(1:5)|>
  pull()

mean_data_pca2 <- data |>
  group_by(sample_cluster)|>
  select(trancrip_to_plot2)|>
    pivot_longer(
    cols = -sample_cluster,
    names_to = "trancrips",
    values_to = "expression"
  )


ggplot(
  mean_data_pca2, 
       aes(
         sample_cluster,
         expression,
         fill = trancrips,
         dodge = trancrips)) +
  stat_boxplot(
    geom ='errorbar') +
  geom_boxplot() +
  scale_x_discrete(
        labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4")
        ) +
    labs(
    title = "Trancript express acroos Clusters",
    x = "Pantien cluters by HC",
    y = "Trancript Expression",
    color = "Trancrips",
    caption = "Data from doi.org/10.1038/s42003-021-01842-7"
    ) +
  theme(
    plot.caption.position = "plot",
    )
```

#### DET single box PC1 

```{r}

trancrip_to_plot <- pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  arrange(desc(PC2))|>
  select(column)|>
  slice(1)|>
  pull()

mean_data <- data |>
  group_by(sample_cluster)|>
  summarise(mean(trancrip_to_plot))
  

ggplot(data,aes_string(
    x = "sample_cluster",
    y = trancrip_to_plot,
    fill = "sample_cluster")
    ) +
  geom_boxplot()
```

#### DET single box PCA2

```{r}


ggplot(data,aes(
    x = sample_cluster,
    y = POU2F3_NM_014352,
    fill = sample_cluster)
    ) +
  geom_boxplot()
```
