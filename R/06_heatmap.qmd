---
title: "06 - Create heatmap analysis"
subtitle: "R for Bio Data Science"
format: html
author: Thomas Tams (s204540)
date: "2023-11-21"
editor: visual
execute:
  message: false
  warning: false
---

## Load libraries

```{r}
library("tidyverse")
library("here")
library("ggdendroplot")
source(here("R/99_proj_func.R"))
```

## Load selected transcript data

```{r}
select_transcript_meta <-
  read_tsv(here("data/03_dat_augment.tsv"))

select_transcript_meta
```

## Select expression data and pivot to have transcripts as rows and log2(1+FPKM) expression values

```{r}
selected_transcript_expr_log <- select_transcript_meta |>
  select(1, 34:ncol(select_transcript_meta)) |>
  pivot_longer(
    col = -sample_id,
    names_to = "transcript_id",
    values_to = "expression_value"
  ) |>
  mutate(expression_value = log2(1 + expression_value)) |>
  pivot_wider(
    names_from = sample_id,
    values_from = expression_value
  )

selected_transcript_expr_log
```

## Hierarchical clustering for Heatmap and Dendrograms

```{r}
# Put to matrix format for compatible hclust(dist())
expr_matrix <- selected_transcript_expr_log |>
  select(-transcript_id) |>
  as.matrix()

rownames(expr_matrix) <- selected_transcript_expr_log |>
  select(transcript_id) |>
  as_vector()

# Perform hierarchical clustering
transcript_clus <- expr_matrix |>
  dist() |>
  hclust()

sample_clus <- expr_matrix |>
  t() |>
  dist() |>
  hclust()

# bring the data.frame into a from easily usable by ggplot
hm <- hmReady(expr_matrix, colclus = sample_clus, rowclus = transcript_clus)

# Setup color vector for beautiful colors
color_vector <- colorRampPalette(c("darkblue", "turquoise", "green", "yellow"))(n = 100)

# plot the heatmap
hmplot <- ggplot() +
  geom_tile(data = hm, aes(x = x, y = y, fill = value)) +
  scale_fill_gradientn(
    colors = color_vector,
    values = c(0, 0.25, 1)
  ) +
  scale_y_reverse() +
  geom_dendro(sample_clus, ylim = c(0, -40), axis.labels = FALSE) +
  geom_dendro(transcript_clus, xlim = c(0, -30), pointing = "side", axis.labels = FALSE) +
  theme(
    axis.label.x = element_blank(),
    axis.label.y = element_blank()
  ) +
  theme_minimal()

ggsave(here("results/06_heatmap_plot.png"), hmplot)

hmplot
```