---
title: "06 - Create heatmap analysis"
subtitle: "R for Bio Data Science"
format: html
author: Thomas Tams (s204540)
date: "2023-11-21"
editor: visual
execute:
  message: false
  warning: false
---

## Load libraries

```{r}
library("tidyverse")
library("here")
library("ggdendroplot")
source(here("R/99_proj_func.R"))
```

## Load selected transcript data

```{r}
select_transcript_meta <-
  read_tsv(here("data/03_dat_augment.tsv"))

select_transcript_meta
```

## Select expression data and pivot to have transcripts as rows and log2(1+FPKM) expression values

```{r}
selected_transcript_expr_log <- select_transcript_meta |>
  select(1, 34:ncol(select_transcript_meta)) |>
  pivot_longer(
    col = -sample_id,
    names_to = "transcript_id",
    values_to = "expression_value"
  ) |>
  mutate(expression_value = log2(1 + expression_value)) |>
  pivot_wider(
    names_from = sample_id,
    values_from = expression_value
  )

selected_transcript_expr_log
```

## Hierarchical clustering for Heatmap and Dendrograms

```{r}
# Put to matrix format for compatible hclust(dist())
expr_matrix <- selected_transcript_expr_log |>
  select(-transcript_id) |>
  as.matrix()

rownames(expr_matrix) <- selected_transcript_expr_log |>
  select(transcript_id) |>
  as_vector()

# Perform hierarchical clustering
transcript_clus <- expr_matrix |>
  dist() |>
  hclust()

sample_clus <- expr_matrix |>
  t() |>
  dist() |>
  hclust()

# bring the data.frame into a from easily usable by ggplot
hm <- hmReady(expr_matrix, colclus = sample_clus, rowclus = transcript_clus)

# Setup color vector for beautiful colors
color_vector <- colorRampPalette(c("darkblue", "turquoise", "green", "yellow"))(n = 100)

# plot the heatmap
hmplot <- ggplot() +
  geom_tile(data = hm, aes(x = x, y = y, fill = value)) +
  scale_fill_gradientn(
    colors = color_vector,
    values = c(0, 0.25, 1)
  ) +
  scale_y_reverse() +
  geom_dendro(sample_clus, ylim = c(0, -40), axis.labels = FALSE) +
  geom_dendro(transcript_clus, xlim = c(0, -30), pointing = "side", axis.labels = FALSE) +
  theme(
    axis.label.x = element_blank(),
    axis.label.y = element_blank()
  ) +
  theme_minimal()

ggsave(here("results/06_heatmap_plot.png"), hmplot)

```

```{r}
# Extract factor names to use as levels
levels_sample <- selected_transcript_expr_log |>
  select(-transcript_id) |>
  select(sample_ord) |>
  colnames()

levels_transcript <- selected_transcript_expr_log |>
  pivot_longer(
    cols = -transcript_id,
    names_to = "sample_id",
    values_to = "expression_value"
  ) |>
  pivot_wider(
    names_from = transcript_id,
    values_from = expression_value
  ) |>
  select(-sample_id) |>
  select(rev(transcript_ord)) |>
  colnames()

# Setup factorered long tibble for plotting
expr_factored_long <- selected_transcript_expr_log |>
  pivot_longer(
    cols = -transcript_id,
    names_to = "sample_id",
    values_to = "expression_value"
  ) |>
  mutate(
    sample_id = factor(sample_id,
      levels = levels_sample
    ),
    transcript_id = factor(transcript_id,
      levels = levels_transcript
    )
  )

expr_factored_long
```

## Define Heatmap and Dendrogram plots

```{r}
# Setup color vector for beautiful colors
color_vector <- colorRampPalette(c("darkblue", "turquoise", "green", "yellow"))(n = 100)

# Plot heatmap via geom_tile()
hm <- expr_factored_long |>
  ggplot(aes(y = transcript_id, x = sample_id, fill = expression_value)) +
  geom_tile() +
  scale_fill_gradientn(colors = color_vector) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 6),
    axis.text.x = element_blank()
  )

# Create dendrogram plots
dendro_transcript <- transcript_clus |>
  as.dendrogram() |>
  ggdendrogram(
    rotate = TRUE,
    size = 7
  ) +
  theme(
    axis.text.y = element_blank(),
    axis.text.x = element_blank()
  )

dendro_sample <- sample_clus |>
  as.dendrogram() |>
  ggdendrogram(rotate = FALSE) +
  theme(
    axis.text.y = element_blank(),
    axis.text.x = element_blank()
  )
```

## Combine plots

```{r}
# Create and empty plot for the subplotting
p_empty <- ggplot()

?subplot()

# Plot final combined plot
fig <- subplot(dendro_sample, p_empty, hm, dendro_transcript,
  nrows = 3,
  heights = c(0.1, 0.89, 0.01),
  widths = c(0.9, 0.1),
  margin = 0.01
) |>
  layout(
    title = "Combined plots",
    height = 600,
    width = 1200
  )

saveWidget(fig, file = here("results/heatmap_dendrogram.html"))
```
