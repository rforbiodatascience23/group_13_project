---
title: "07 - Logistic modelling of gene expression"
subtitle: "R for Bio Data Science"
format: html
author: Mikkel Niklas Rasmussen (s193518)
date: "2023-11-20"
editor: visual
---

## Load libraries
```{r}
library("tidyverse")
library("here")
library("broom")
library("ggrepel")
```


## Load data
```{r}
data <- read_tsv(here("data/03_dat_augment.tsv"))
```

## Drop samples with NA in survival status 

```{r}
data <- data |>
  drop_na(survival_status)
```

## Get expression data from all data
```{r}
# Extract the expression data
expression_data <- data |>
  select(sample_id, survival_status, 32:ncol(data))
````

```{r}
# Convert expression data into long format
expr_long <- expression_data |>
  pivot_longer(
    cols = -c(sample_id, survival_status),
    names_to = "gene",
    values_to = "expr_level"
  )

# Log2 transform data
expr_log_long <- expr_long |>
  mutate(
    log2_expr_level = log2(expr_level + 1)
  )
```

 
```{r}
# Nest the data
expr_log_long_nested <- expr_log_long |>
  group_by(gene) |>
  nest() |>
  ungroup()

# Model each gene with a logistic regression model
expr_log_long_nested <- expr_log_long_nested |>
  group_by(gene) |>
  mutate(model_object = map(
    .x = data,
    .f = ~ lm(
      formula = log2_expr_level ~ survival_status,
      data = .x
    )
  ))

# Calculate confidence intervals
expr_log_long_nested <- expr_log_long_nested |>
  mutate(model_object_tidy = map(
    .x = model_object,
    .f = ~ tidy(
      x = .x,
      conf.int = TRUE,
      conf.level = 0.95
    )
  ))

# Unnest the data
expr_estimates <- expr_log_long_nested |>
  unnest(model_object_tidy) |>
  drop_na(p.value)

# Extract columns of
expr_estimates <- expr_estimates |>
  filter(term == "survival_status") |>
  select(gene, p.value, estimate, conf.low, conf.high) |>
  ungroup()
expr_estimates

expr_estimates <- expr_estimates |>
  mutate(
    q.value = p.adjust(p.value),
    is_significant = case_when(
      p.value <= 10^(-3) ~ "yes",
      p.value > 10^(-3) ~ "no"
    )
  )

expr_estimates |>
  filter(is_significant == "yes") |>
  select(gene, p.value) |>
  View()
```


```{r}
pl1 <- expr_estimates |>
  filter(is_significant == "yes") |>
  mutate(
    gene = str_remove_all(gene, "_NM_.*")
  ) |>
  ggplot(aes(
    x = estimate,
    y = fct_reorder(gene, estimate),
    xmin = conf.low,
    xmax = conf.high
  )) +
  geom_vline(xintercept = 0) +
  geom_errorbarh() +
  geom_point() +
  theme_minimal(base_size = 16) +
  labs(
    x = "Estimates (95%CIs)",
    y = "",
    title = "Genes Associated with Small Cell Lung Cancer",
    caption = "Data from DOI:https://doi.org/10.1038/nature14664"
  )
pl1
ggsave(here("results/07_associated_genes_CI.png"), pl1)


pl2 <- expr_estimates |>
  mutate(
    gene = str_remove_all(gene, "_NM_.*"),
    lbl = case_when(
      is_significant == "yes" ~ gene,
      is_significant == "no" ~ ""
    )
  ) |>
  ggplot(aes(
    x = estimate,
    y = -log10(p.value),
    colour = is_significant,
    label = lbl
  )) +
  geom_point(
    size = 0.5,
    alpha = 0.5
  ) +
  geom_text_repel(
    size = 4,
    max.overlaps = 20
  ) +
  geom_hline(yintercept = 0) +
  theme_minimal(base_size = 16) +
  theme(
    legend.position = "none"
  ) +
  labs(
    x = "Estimates",
    y = bquote(-log[10](p)),
    title = "Genes Associated with Small Cell Lung Cancer",
    subtitle = bquote("Genes highlighted in red had a p-value < " * 10^-3),
    caption = "Data from DOI: https://doi.org/10.1038/nature14664"
  ) +
  scale_color_manual(values = c("black", "red"))
pl2
ggsave(here("results/07_associated_genes_vulcano_plot.png"), pl2)
```
